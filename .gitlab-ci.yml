variables:
    CI_PROJECT_DOMAIN: "https://pragit.diee.unica.it"
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    SECML_HOME_DIR: "$CI_PROJECT_DIR/secml-data"
    TOX_WORKDIR: "$CI_PROJECT_DIR/.tox"
    TOX_TESTENV_PASSENV: "PIP_CACHE_DIR SECML_HOME_DIR"
    TOX_USEDEVELOP: "False"

stages:
  - package
  - test
  - release
  - deploy
  - triage

.test-cache-py2: &test-cache-py2
  cache:
    key: "test-cache-py2"
    paths:
      - "$CI_PROJECT_DIR/.cache/pip"
      - "$CI_PROJECT_DIR/secml-data"

.test-cache-py35: &test-cache-py35
  cache:
    key: "test-cache-py35"
    paths:
      - "$CI_PROJECT_DIR/.cache/pip"
      - "$CI_PROJECT_DIR/secml-data"

.test-cache-py36: &test-cache-py36
  cache:
    key: "test-cache-py36"
    paths:
      - "$CI_PROJECT_DIR/.cache/pip"
      - "$CI_PROJECT_DIR/secml-data"

.test-cache-py37: &test-cache-py37
  cache:
    key: "test-cache-py37"
    paths:
      - "$CI_PROJECT_DIR/.cache/pip"
      - "$CI_PROJECT_DIR/secml-data"

.test:
  stage: test
  before_script:
    - echo $CI_PROJECT_DIR
    - python -V
    - pip install tox
  only:
    changes:
      - src/secml/**/*
      - .gitlab-ci.yml
      - requirements.txt
      - setup.py
      - tox.ini
  except:
    - schedules

test:min:
  extends: .test
  image: python:2
  script: tox -e min
  <<: *test-cache-py2

test:py35-latest:
  extends: .test
  image: python:3.5
  script: tox -e py35
  allow_failure: true
  <<: *test-cache-py35

test:py35-min:
  extends: .test
  image: python:3.5
  script: tox -e py35-min
  allow_failure: true
  <<: *test-cache-py35

test:py36-min:
  extends: .test
  image: python:3.6
  script: tox -e py36-min
  allow_failure: true
  <<: *test-cache-py36

test:py37-min:
  extends: .test
  image: python:3.7
  script: tox -e py37-min
  allow_failure: true
  <<: *test-cache-py37

package:
  stage: package
  image: ${CI_REGISTRY}/pralab/docker-helper-images/python2-setuptools:latest
  before_script:
    - echo $CI_PROJECT_DIR
  script:
    - python setup.py sdist --formats=zip
  only:
    changes:
      - src/secml/**/*
      - .gitlab-ci.yml
      - CHANGELOG.md
      - MANIFEST.in
      - README.md
      - requirements.txt
      - setup.py
      - tox.ini
  except:
    - schedules
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - ${CI_PROJECT_DIR}/dist/${CI_PROJECT_NAME}-*.zip

.test:install:
  stage: test
  image: python:2
  before_script:
    - echo $CI_PROJECT_DIR
    - python -V
  after_script:
    - python -c "import secml"
  only:
    refs:
      - /^release-.*$/
      - /^.*-stable$/
      - develop
      - tags
      - web
    changes:
      - src/secml/**/*
      - .gitlab-ci.yml
      - CHANGELOG.md
      - MANIFEST.in
      - README.md
      - requirements.txt
      - setup.py
      - tox.ini
  except:
    - schedules
  <<: *test-cache-py2

#test:install:pypi:
#  extends: .test:install
#  script:
#    - pip install secml

#test:install:pypi-extras:
#  extends: .test:install
#  script:
#    - pip install secml[pytorch]
#  after_script:
#    - python -c "import secml"
#    - python -c "import secml.pytorch"

test:install:zip:
  extends: .test:install
  script:
    - pip install ${CI_PROJECT_DIR}/dist/${CI_PROJECT_NAME}-*.zip

test:install:unzip:
  extends: .test:install
  script:
    - apt-get install -yq unzip > /dev/null
    - cd ${CI_PROJECT_DIR}/dist
    - unzip ${CI_PROJECT_NAME}-*.zip
    - cd $(find -maxdepth 1 -type d -iname ${CI_PROJECT_NAME}-\*)
    - pip install .

test:install:unzip-extras:
  extends: .test:install
  script:
    - apt-get install -yq unzip > /dev/null
    - cd ${CI_PROJECT_DIR}/dist
    - unzip ${CI_PROJECT_NAME}-*.zip
    - cd $(find -maxdepth 1 -type d -iname ${CI_PROJECT_NAME}-\*)
    - pip install .[pytorch,cleverhans]
  after_script:
    - python -c "import secml"
    - python -c "import secml.pytorch"
    - python -c "import secml.tf.clvhs"

release:
  stage: release
  image: ${CI_REGISTRY}/pralab/docker-helper-images/alpine-curl:latest
  before_script:
    - apk add unzip
    - echo $CI_PROJECT_ID
    - echo $CI_COMMIT_TAG
  script:
    - DIST_ZIP=$(find $CI_PROJECT_DIR/dist -iname \*.zip -exec basename {} \;)
    - echo $DIST_ZIP
    - 'curl -s --request POST --header "PRIVATE-TOKEN: $PRAGIT_BOT_TOKEN" --data name="$DIST_ZIP" --data url="$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/raw/dist/$DIST_ZIP?job=package" $CI_PROJECT_DOMAIN/api/v4/projects/$CI_PROJECT_ID/releases/$CI_COMMIT_TAG/assets/links'
  only:
    - tags

#install:repo:
#  extends: .install
#  script:
#    - apt-get install -yq git > /dev/null
#    - pip install git+${CI_REPOSITORY_URL}@${CI_COMMIT_REF_NAME}#egg=secml

#install:repo-extras:
#  extends: .install
#  script:
#    - apt-get install -yq git > /dev/null
#    - pip install git+${CI_REPOSITORY_URL}@${CI_COMMIT_REF_NAME}#egg=secml[pytorch]
#  after_script:
#    - python -c "import secml"
#    - python -c "import secml.pytorch"

#deploy:
#  image: ubuntu:xenial
#  stage: deploy
#  when:manual
#  script:
#    - echo "DEPLOY"

.triage:
  image: ruby:2.4
  cache: {}
  before_script:
    - gem install gitlab-triage
    - export SSL_CERT_FILE=$CI_SERVER_TLS_CA_FILE

triage:run:
  stage: triage
  extends: .triage
  script:
    - gitlab-triage --debug --host-url $CI_PROJECT_DOMAIN --token $TRIAGE_API_TOKEN --project-id $CI_PROJECT_PATH --policies-file $CI_PROJECT_DIR/.gitlab/triage-policies.yml
  only:
    - schedules

triage:run:dry:
  stage: triage
  extends: .triage
  script:
    - gitlab-triage --dry-run --debug --host-url $CI_PROJECT_DOMAIN --token $TRIAGE_API_TOKEN --project-id $CI_PROJECT_PATH --policies-file $CI_PROJECT_DIR/.gitlab/triage-policies.yml
  only:
    - schedules
    - web
  when: manual