variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    SECML_HOME_DIR: "$CI_PROJECT_DIR/secml-lib-data"
    TOX_WORKDIR: "$CI_PROJECT_DIR/.tox"
    TOX_TESTENV_PASSENV: "PIP_CACHE_DIR SECML_HOME_DIR"
    TOX_USEDEVELOP: "False"

cache:
  key: "$CI_JOB_NAME"
  paths:
    - "$CI_PROJECT_DIR/.cache/pip"
    - "$CI_PROJECT_DIR/.vendor/apt"
    - "$CI_PROJECT_DIR/secml-lib-data"

stages:
  - test
  - package
  - install
  - deploy

.test:
  stage: test
  image: ubuntu:xenial
  before_script:
    - echo $CI_PROJECT_DIR
    - sh .gitlab-ci-extra.sh > /dev/null
    - pip install tox
  only:
    changes:
      - src/secml/**/*
      - .gitlab-ci.yml
      - .gitlab-ci-extra.sh
      - requirements.txt
      - setup.py
      - tox.ini

test:min:
  extends: .test
  script: tox -e min

test:latest:
  extends: .test
  script: tox -e latest

test:py27-n14:
  extends: .test
  script: tox -e py27-n14

test:py27-n15:
  extends: .test
  script: tox -e py27-n15

package:
  stage: package
  image: ${CI_REGISTRY}/pralab/docker-helper-images/python2-setuptools:latest
  when: always
  before_script:
    - echo $CI_PROJECT_DIR
  script:
    - python setup.py sdist --formats=zip
  only:
    changes:
      - src/secml/**/*
      - .gitlab-ci.yml
      - .gitlab-ci-extra.sh
      - CHANGELOG.md
      - MANIFEST.in
      - README.md
      - requirements.txt
      - setup.py
      - tox.ini
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - ${CI_PROJECT_DIR}/dist/SecML-Lib-*.zip

.install:
  stage: install
  image: ubuntu:xenial
  before_script:
    - echo $CI_PROJECT_DIR
    - sh .gitlab-ci-extra.sh > /dev/null
  after_script:
    - python -c "import secml"
  only:
    refs:
      - /^release-.*$/
      - /^.*-stable$/
      - develop
      - tags
      - web
    changes:
      - src/secml/**/*
      - .gitlab-ci.yml
      - .gitlab-ci-extra.sh
      - CHANGELOG.md
      - MANIFEST.in
      - README.md
      - requirements.txt
      - setup.py
      - tox.ini

#install:pypi:
#  extends: .install
#  script:
#    - pip install secml-lib

#install:pypi-extras:
#  extends: .install
#  script:
#    - pip install secml-lib[pytorch]
#  after_script:
#    - python -c "import secml"
#    - python -c "import secml.pytorch"

install:zip:
  extends: .install
  script:
    - pip install ${CI_PROJECT_DIR}/dist/SecML-Lib-*.zip

install:unzip:
  extends: .install
  script:
    - apt-get install -yq unzip > /dev/null
    - unzip ${CI_PROJECT_DIR}/dist/SecML-Lib-*.zip
    - cd SecML-Lib-*
    - pip install .

install:unzip-extras:
  extends: .install
  script:
    - apt-get install -yq unzip > /dev/null
    - unzip ${CI_PROJECT_DIR}/dist/SecML-Lib-*.zip
    - cd SecML-Lib-*
    - pip install .[pytorch]
  after_script:
    - python -c "import secml"
    - python -c "import secml.pytorch"

#install:repo:
#  extends: .install
#  script:
#    - apt-get install -yq git > /dev/null
#    - pip install git+${CI_REPOSITORY_URL}@${CI_COMMIT_REF_NAME}#egg=secml-lib

#install:repo-extras:
#  extends: .install
#  script:
#    - apt-get install -yq git > /dev/null
#    - pip install git+${CI_REPOSITORY_URL}@${CI_COMMIT_REF_NAME}#egg=secml-lib[pytorch]
#  after_script:
#    - python -c "import secml"
#    - python -c "import secml.pytorch"

#deploy:
#  image: ubuntu:xenial
#  stage: deploy
#  when:manual
#  script:
#    - echo "DEPLOY"
