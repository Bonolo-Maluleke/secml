variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    SECML_HOME_DIR: "$CI_PROJECT_DIR/secml-data"
    TOX_WORKDIR: "$CI_PROJECT_DIR/.tox"
    TOX_TESTENV_PASSENV: "PIP_CACHE_DIR SECML_HOME_DIR"
    TOX_USEDEVELOP: "False"

stages:
  - package
  - test
  - release
  - deploy
  - triage


.test-cache:
  cache: &test-cache
    paths:
      - "$CI_PROJECT_DIR/.cache/pip"
      - "$CI_PROJECT_DIR/secml-data"

.test-cache-py2:
  cache: &test-cache-py2
    key: "test-cache-py2"
    <<: *test-cache

.test-cache-py35:
  cache: &test-cache-py35
    key: "test-cache-py35"
    <<: *test-cache

.test-cache-py36:
  cache: &test-cache-py36
    key: "test-cache-py36"
    <<: *test-cache

.test-cache-py37:
  cache: &test-cache-py37
    key: "test-cache-py37"
    <<: *test-cache


package:
  stage: package
  image: ${CI_REGISTRY}/pralab/docker-helper-images/python35-setuptools:latest
  before_script:
    - echo $CI_PROJECT_DIR
  script:
    - python setup.py sdist --formats=zip
    - python setup.py bdist_wheel --universal
    - twine check dist/*
  only:
    changes:
      - src/secml/**/*
      - .gitlab-ci.yml
      - CHANGELOG.md
      - MANIFEST.in
      - README.md
      - requirements.txt
      - setup.py
      - tox.ini
  except:
    - schedules
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - ${CI_PROJECT_DIR}/dist/${CI_PROJECT_NAME}-*.zip
      - ${CI_PROJECT_DIR}/dist/${CI_PROJECT_NAME}-*.whl
    expire_in: 1 week

package:docs:
  stage: package
  image: ${CI_REGISTRY}/pralab/docker-helper-images/python35-sphinx:latest
  script:
    - echo $CI_PROJECT_DIR
    - python -V
    - pip install tox
    - tox -e docs
    - mv docs/build/html/ public/
  only:
    changes:
      - docs/**/*
      - tutorials/**/*
      - src/secml/**/*
      - .gitlab-ci.yml
      - CHANGELOG.md
      - README.md
      - requirements.txt
      - setup.py
      - tox.ini
  except:
    - schedules
  artifacts:
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_DOCS"
    paths:
      - public
    expire_in: 1 day
  cache:
    key: "test-cache-py35"
    paths:
      - "$CI_PROJECT_DIR/.cache/pip"
      - "$CI_PROJECT_DIR/secml-data"
    policy: pull


.test:
  stage: test
  needs: ["package"]
  before_script:
    - echo $CI_PROJECT_DIR
    - python -V
    - pip install tox
  only:
    changes:
      - src/secml/**/*
      - .gitlab-ci.yml
      - requirements.txt
      - setup.py
      - tox.ini
  except:
    - schedules

test:py2:min:
  extends: .test
  image: python:2
  script: tox -e py2-min
  cache: *test-cache-py2

test:py35:latest:
  extends: .test
  image: python:3.5
  script: tox -e py35
  cache: *test-cache-py35

test:py35:min:
  extends: .test
  image: python:3.5
  script: tox -e py35-min
  cache: *test-cache-py35

test:py36:min:
  extends: .test
  image: python:3.6
  script: tox -e py36-min
  cache: *test-cache-py36

test:py37:min:
  extends: .test
  image: python:3.7
  script: tox -e py37-min
  cache: *test-cache-py37


.test:install:
  stage: test
  needs: ["package"]
  before_script:
    - echo $CI_PROJECT_DIR
    - python -V
  after_script:
    - python -c "import secml"
  only:
    refs:
      - /^release-.*$/
      - /^.*-stable$/
      - develop
      - tags
      - web
    changes:
      - src/secml/**/*
      - .gitlab-ci.yml
      - CHANGELOG.md
      - MANIFEST.in
      - README.md
      - requirements.txt
      - setup.py
      - tox.ini
  except:
    - schedules

.test:install:whl:
  extends: .test:install
  script:
    - DIST_WHL=$(find $CI_PROJECT_DIR/dist -iname \*.whl -exec basename {} \;)
    - echo $DIST_WHL
    - pip install ${CI_PROJECT_DIR}/dist/${DIST_WHL}

.test:install:whl:extras:
  extends: .test:install:whl
  script:
    - DIST_WHL=$(find $CI_PROJECT_DIR/dist -iname \*.whl -exec basename {} \;)
    - echo $DIST_WHL
    - pip install ${CI_PROJECT_DIR}/dist/${DIST_WHL}[pytorch]
  after_script:
    - python -c "import secml"
    - python -c "from secml.ml.classifiers import CClassifierPyTorch"

test:install:whl:py2:
  extends: .test:install:whl
  image: python:2
  cache:
    <<: *test-cache-py2
    policy: pull

test:install:whl:py35:
  extends: .test:install:whl
  image: python:3.5
  cache:
    <<: *test-cache-py35
    policy: pull

test:install:whl:py36:
  extends: .test:install:whl
  image: python:3.6
  cache:
    <<: *test-cache-py36
    policy: pull

test:install:whl:py37:
  extends: .test:install:whl
  image: python:3.7
  cache:
    <<: *test-cache-py37
    policy: pull

test:install:whl:extras:py2:
  extends: .test:install:whl:extras
  image: python:2
  cache:
    <<: *test-cache-py2
    policy: pull

test:install:whl:extras:py35:
  extends: .test:install:whl:extras
  image: python:3.5
  cache:
    <<: *test-cache-py35
    policy: pull

test:install:whl:extras:py36:
  extends: .test:install:whl:extras
  image: python:3.6
  cache:
    <<: *test-cache-py36
    policy: pull

test:install:whl:extras:py37:
  extends: .test:install:whl:extras
  image: python:3.7
  cache:
    <<: *test-cache-py37
    policy: pull


release:
  stage: release
  image: ${CI_REGISTRY}/pralab/docker-helper-images/alpine-release:latest
  before_script:
    - apk add unzip
    - echo $CI_PROJECT_ID
    - echo $CI_COMMIT_TAG
  script:
    - DIST_ZIP=$(find $CI_PROJECT_DIR/dist -iname \*.zip -exec basename {} \;)
    - echo $DIST_ZIP
    - 'curl -s --request POST --header "PRIVATE-TOKEN: $API_ACCESS_TOKEN" --data name="$DIST_ZIP" --data url="$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/raw/dist/$DIST_ZIP?job=release" $CI_PROJECT_DOMAIN/api/v4/projects/$CI_PROJECT_ID/releases/$CI_COMMIT_TAG/assets/links'
    - DIST_WHL=$(find $CI_PROJECT_DIR/dist -iname \*.whl -exec basename {} \;)
    - echo $DIST_WHL
    - 'curl -s --request POST --header "PRIVATE-TOKEN: $API_ACCESS_TOKEN" --data name="$DIST_WHL" --data url="$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_TAG/raw/dist/$DIST_WHL?job=release" $CI_PROJECT_DOMAIN/api/v4/projects/$CI_PROJECT_ID/releases/$CI_COMMIT_TAG/assets/links'
  artifacts:  # Keep the distribution package (default expire 0)
    name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - ${CI_PROJECT_DIR}/dist/${CI_PROJECT_NAME}-*.zip
      - ${CI_PROJECT_DIR}/dist/${CI_PROJECT_NAME}-*.whl
  only:
    - tags


#pages:
#  stage: release
#  script:
#    - ls public
#  dependencies:
#    - package:docs
#  artifacts:
#    paths:
#      - public
#    expire_in: 1 hour
#  only:
#    - tags


#deploy:
#  stage: deploy
#  when:manual
#  script:
#    - echo "DEPLOY"


.triage:
  image: ruby:2.4
  cache: {}
  before_script:
    - gem install gitlab-triage
    - export SSL_CERT_FILE=$CI_SERVER_TLS_CA_FILE

triage:run:
  stage: triage
  extends: .triage
  script:
    - gitlab-triage --debug --host-url $CI_PROJECT_DOMAIN --token $API_ACCESS_TOKEN --source-id $CI_PROJECT_PATH --policies-file $CI_PROJECT_DIR/.gitlab/triage-policies.yml
  only:
    - schedules

triage:run:dry:
  stage: triage
  extends: .triage
  script:
    - gitlab-triage --dry-run --debug --host-url $CI_PROJECT_DOMAIN --token $API_ACCESS_TOKEN --source-id $CI_PROJECT_PATH --policies-file $CI_PROJECT_DIR/.gitlab/triage-policies.yml
  only:
    - schedules
    - web
  when: manual